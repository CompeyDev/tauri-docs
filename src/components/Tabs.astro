---
import crypto from 'crypto'

interface Props {
  tabTitles: string[]
}

const { tabTitles } = Astro.props

if (!tabTitles) {
  throw Error(`'tabTitles' prop not passed for ${Astro.url.pathname}`)
}
if (!tabTitles.every((title) => Astro.slots.has(title))) {
  throw Error(
    `The tab ${title} is not included in the Tabs body for ${Astro.url.pathname}`
  )
}

const uuid = crypto.randomUUID()

const slots = await Promise.all(
  tabTitles.map(async (title) => await Astro.slots.render(title))
)

// TODO: Local storage for remembering selected tab
// TODO: Make each tab have a unique selector on the page
---

<div class="card">
  {
    tabTitles.map((title, index) => (
      <div>
        <input
          type="radio"
          name={`tabs-${uuid}`}
          id={`tab${index}${uuid}`}
          checked={index == 0}
        />
        <label for={`tab${index}${uuid}`} class="btn-normal">
          {title}
        </label>
        <div id="tab-content" class="tab-content">
          <Fragment set:html={slots[index]} />
        </div>
      </div>
    ))
  }
</div>

<style>
  input {
    display: none;
  }
  input + label {
    display: inline-block;
  }
  .tab-content {
    display: none;
  }
  [id^='tab']:checked + label {
    @apply btn-active;
  }
  [id^='tab']:checked ~ [id^='tab-content'] {
    display: block;
  }
</style>
